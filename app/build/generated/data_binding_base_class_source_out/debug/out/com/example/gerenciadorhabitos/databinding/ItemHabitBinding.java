// Generated by view binder compiler. Do not edit!
package com.example.gerenciadorhabitos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gerenciadorhabitos.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHabitBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnDelete;

  @NonNull
  public final Button btnToggle;

  @NonNull
  public final TextView habitSubtitle;

  @NonNull
  public final TextView habitTitle;

  private ItemHabitBinding(@NonNull CardView rootView, @NonNull Button btnDelete,
      @NonNull Button btnToggle, @NonNull TextView habitSubtitle, @NonNull TextView habitTitle) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnToggle = btnToggle;
    this.habitSubtitle = habitSubtitle;
    this.habitTitle = habitTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHabitBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHabitBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_habit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHabitBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      Button btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnToggle;
      Button btnToggle = ViewBindings.findChildViewById(rootView, id);
      if (btnToggle == null) {
        break missingId;
      }

      id = R.id.habitSubtitle;
      TextView habitSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (habitSubtitle == null) {
        break missingId;
      }

      id = R.id.habitTitle;
      TextView habitTitle = ViewBindings.findChildViewById(rootView, id);
      if (habitTitle == null) {
        break missingId;
      }

      return new ItemHabitBinding((CardView) rootView, btnDelete, btnToggle, habitSubtitle,
          habitTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
